{"ast":null,"code":"import _objectWithoutProperties from \"/Users/paulbriar/Desktop/Coding/React/Twitta/Twitta-Front/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport apiCall from '../../services/api';\nimport { SET_CURRENT_USER } from '../actionTypes';\nimport { addError, removeError } from './errors';\nexport var setCurrentUser = function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user: user\n  };\n};\nexport var authUser = function authUser(type, userData) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      return apiCall(\"post\", \"/api/auth/\".concat(type), userData).then(function (_ref) {\n        var token = _ref.token,\n            user = _objectWithoutProperties(_ref, [\"token\"]);\n\n        localStorage.setItem(\"jwtToken\", token);\n        dispatch(setCurrentUser(user));\n        dispatch(removeError());\n        resolve();\n      }).catch(function (err) {\n        dispatch(addError(err.message));\n        reject();\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/paulbriar/Desktop/Coding/React/Twitta/Twitta-Front/src/store/actions/auth.js"],"names":["apiCall","SET_CURRENT_USER","addError","removeError","setCurrentUser","user","type","authUser","userData","dispatch","Promise","resolve","reject","then","token","localStorage","setItem","catch","err","message"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,UAAtC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI,EAAI;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEL,gBADD;AAELI,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACD,IAAD,EAAOE,QAAP,EAAoB;AAC1C,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,aAAOZ,OAAO,CAAC,MAAD,sBAAsBM,IAAtB,GAA8BE,QAA9B,CAAP,CACJK,IADI,CACE,gBAAsB;AAAA,YAApBC,KAAoB,QAApBA,KAAoB;AAAA,YAAVT,IAAU;;AAC3BU,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAL,QAAAA,QAAQ,CAACL,cAAc,CAACC,IAAD,CAAf,CAAR;AACAI,QAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACAQ,QAAAA,OAAO;AACR,OANI,EAOJM,KAPI,CAOE,UAAAC,GAAG,EAAI;AACZT,QAAAA,QAAQ,CAACP,QAAQ,CAACgB,GAAG,CAACC,OAAL,CAAT,CAAR;AACAP,QAAAA,MAAM;AACP,OAVI,CAAP;AAWD,KAZM,CAAP;AAaD,GAdD;AAeD,CAhBM","sourcesContent":["import apiCall from '../../services/api';\nimport { SET_CURRENT_USER } from '../actionTypes';\nimport { addError, removeError } from './errors';\n\nexport const setCurrentUser = user => {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\n\nexport const authUser = (type, userData) => {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      return apiCall(\"post\", `/api/auth/${type}`, userData)\n        .then( ({token, ...user}) => {\n          localStorage.setItem(\"jwtToken\", token);\n          dispatch(setCurrentUser(user));\n          dispatch(removeError());\n          resolve();\n        })\n        .catch(err => {\n          dispatch(addError(err.message));\n          reject();\n        })\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}