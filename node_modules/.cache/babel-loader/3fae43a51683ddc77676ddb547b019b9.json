{"ast":null,"code":"import axios from 'axios';\n/*\n  A wrapper around axios API call that formats errors, etc\n  @param {string} method - the http verb we want to use\n  @param {string} path - the route path / endpoint\n  @param {object} data = (optional) data in JSON form for POST requests\n*/\n\nvar apiCall = function apiCall(method, path, data) {\n  return new Promise(function (resolve, reject) {\n    return axios[method](path, data).then(function (res) {\n      return resolve(res.data);\n    }).catch(function (err) {\n      return reject(err.response.data.error);\n    });\n  });\n};\n\nexport default apiCall;","map":{"version":3,"sources":["/Users/paulbriar/Desktop/Coding/React/Twitta/Twitta-Front/src/services/api.js"],"names":["axios","apiCall","method","path","data","Promise","resolve","reject","then","res","catch","err","response","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;;;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,IAAT,EAAeC,IAAf,EAAwB;AACtC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,WAAOP,KAAK,CAACE,MAAD,CAAL,CAAcC,IAAd,EAAoBC,IAApB,EACJI,IADI,CACC,UAAAC,GAAG,EAAI;AACX,aAAOH,OAAO,CAACG,GAAG,CAACL,IAAL,CAAd;AACH,KAHM,EAGJM,KAHI,CAGE,UAAAC,GAAG,EAAI;AACZ,aAAOJ,MAAM,CAACI,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,KAAnB,CAAb;AACH,KALM,CAAP;AAMD,GAPM,CAAP;AAQD,CATD;;AAWA,eAAeZ,OAAf","sourcesContent":["import axios from 'axios';\n\n/*\n  A wrapper around axios API call that formats errors, etc\n  @param {string} method - the http verb we want to use\n  @param {string} path - the route path / endpoint\n  @param {object} data = (optional) data in JSON form for POST requests\n*/\nconst apiCall = (method, path, data) => {\n  return new Promise((resolve, reject) => {\n    return axios[method](path, data)\n      .then(res => {\n        return resolve(res.data);\n    }).catch(err => {\n        return reject(err.response.data.error);\n    })\n  })\n}\n\nexport default apiCall;"]},"metadata":{},"sourceType":"module"}